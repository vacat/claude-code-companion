version: "3.8"

services:
  claude-code-companion:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        VERSION: "${VERSION:-docker-compose}"
    image: claude-code-companion:latest
    container_name: claude-code-companion
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      # 配置文件挂载（读写模式，支持Admin Console修改）
      - ./config.docker.yaml:/app/config/config.yaml
      # 日志目录挂载
      - ./logs:/app/logs
      # 可选：挂载自定义配置目录
      # - ./config:/app/config
    environment:
      # 环境变量示例，可以在配置文件中使用 ${ENV_VAR} 语法
      - TZ=Asia/Shanghai
      # API密钥可以通过环境变量传递
      - MODELSCOPE_API_KEY=${MODELSCOPE_API_KEY}
      - GLM_API_KEY=${GLM_API_KEY}
      - KIMI_API_KEY=${KIMI_API_KEY}
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - DASHSCOPE_API_KEY=${DASHSCOPE_API_KEY}
      - IFLOW_API_KEY=${IFLOW_API_KEY}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/admin/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - claude-network
    # 资源限制
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "1.0"
        reservations:
          memory: 256M
          cpus: "0.5"

  # Prometheus 监控服务
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: claude-prometheus
  #   restart: unless-stopped
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
  #     - prometheus_data:/prometheus
  #   command:
  #     - "--config.file=/etc/prometheus/prometheus.yml"
  #     - "--storage.tsdb.path=/prometheus"
  #     - "--web.console.libraries=/etc/prometheus/console_libraries"
  #     - "--web.console.templates=/etc/prometheus/consoles"
  #     - "--storage.tsdb.retention.time=15d"
  #     - "--web.enable-lifecycle"
  #   networks:
  #     - claude-network
  #   depends_on:
  #     - claude-code-companion

  # # Grafana 可视化面板
  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: claude-grafana
  #   restart: unless-stopped
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #     - ./monitoring/grafana.ini:/etc/grafana/grafana.ini:ro
  #     - ./monitoring/provisioning:/etc/grafana/provisioning:ro
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #     - GF_USERS_ALLOW_SIGN_UP=false
  #   networks:
  #     - claude-network
  #   depends_on:
  #     - prometheus

networks:
  claude-network:
    driver: bridge

volumes:
  logs:
    driver: local
  config:
    driver: local
  # prometheus_data:
  #   driver: local
  # grafana_data:
  #   driver: local
